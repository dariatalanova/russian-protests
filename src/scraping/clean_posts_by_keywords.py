import json
import pandas as pd
import re
from pathlib import Path
from datetime import datetime

keywords = [r'—Å–±–æ—Ä.{1,10}–ø–æ–¥–ø–∏—Å',r'\b–ø—Ä–æ—Ç–µ—Å—Ç',r'—É–ª–∏—á–Ω.{1,10}–∞–∫—Ü–∏','–º–∏—Ç–∏–Ω–≥','–∑–∞–±–∞—Å—Ç–æ–≤–∫',r'\b–ø–∏–∫–µ—Ç',
            r'\b–ø–µ—Ç–∏—Ü–∏',r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,10}–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—É', r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,10}–º—ç—Ä—É', r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,10}–¥–µ–ø—É—Ç–∞—Ç',
            r'–≤–∏–¥–µ–æ.{0,5}–±—Ä–∞—â–µ–Ω', r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,30}–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä', r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,30}–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä',
            r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,30}–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—É', r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,30}–º—ç—Ä—É', r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,30}–¥–µ–ø—É—Ç–∞—Ç',
            r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—É', r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä',
            r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–º—ç—Ä—É', r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–¥–µ–ø—É—Ç–∞—Ç—É',
            r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É', r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–ø—É—Ç–∏–Ω—É',
            r'–Ω–∞–ø–∏—Å–∞–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é.{0,3}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞', r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É',
            r'–ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å.{1,10}–ø—É—Ç–∏–Ω—É', r'–æ—Ç–ø—Ä–∞–≤–∏–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É',
            r'–æ—Ç–ø—Ä–∞–≤–∏–ª–∏.{1,10}–∂–∞–ª–æ–±—É.{1,10}–ø—É—Ç–∏–Ω—É', r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É', r'–æ–±—Ä–∞—Ç–∏–ª–∏—Å—å.{1,10}–ø—É—Ç–∏–Ω—É',
            r'–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä—É', r"–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É", r"–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–¥–µ–ø—É—Ç–∞—Ç—É",
            r"–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–º—ç—Ä—É", r"–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏", r"–æ–±—Ä–∞—â–µ–Ω–∏.{1,10}–º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ",
            r'–∂–∞–ª–æ–±—É.{1,10}–≥—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—É', r'–∂–∞–ª–æ–±—É.{1,10}–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä',
            r'–∂–∞–ª–æ–±—É.{1,10}–º—ç—Ä—É', r'–∂–∞–ª–æ–±—É.{1,10}–¥–µ–ø—É—Ç–∞—Ç—É',
            r'–∂–∞–ª–æ–±—É.{1,10}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—É', r'–∂–∞–ª–æ–±—É.{1,10}–ø—É—Ç–∏–Ω—É', r'–∂–∞–ª–æ–±—É.{1,10}–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—é',
            r'–∂–∞–ª–æ–±—É.{1,10}–º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ']
keywords_regex = re.compile(r"(" + "|".join(keywords) + r")", re.IGNORECASE)

stopwords = [r'\b—Å—à–∞\b', '–∞–º–µ—Ä–∏–∫', "–∏–∑—Ä–∞–∏–ª", "–ø–∞–ª–µ—Å—Ç–∏–Ω", "–≥–µ—Ä–º–∞–Ω", "–Ω–µ–º—Ü—ã", "–∫–æ—Ä–µ—è",
             "—Ñ—Ä–≥", "–±–µ–ª–≥—Ä–∞–¥", "—Å–µ—Ä–±", r"–≤—ã—Ä–∞–∑–∏.{1,5}–ø—Ä–æ—Ç–µ—Å—Ç", "–∑–µ–ª–∞–Ω–¥", "–ª–æ–Ω–¥–æ–Ω",
             r"\b–≤—Å—É\b", "–∑–µ–ª–µ–Ω—Å–∫", r"\b–∏—Ç–∞–ª", '—Ñ—Ä–∞–Ω—Ü', "–ø–∞—Ä–∏–∂", "—Ç–µ—Ö–∞—Å", r"\b—Å–∏—Ü–∏–ª",
             '–∏—Å–ø–∞–Ω', r"—Å–ª—É–∂–µ–±–Ω.{1,5}–¥–æ–ª–≥.{0,5}–∑–∞.{0,5}–ø—Ä–µ–¥–µ–ª–∞–º–∏", "–∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏—Å—Ç", "–∞—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω",
             "–∞–∑–µ—Ä–±–∞–π–¥–∂", "–µ—Ä–µ–≤–∞–Ω", "—Å–æ–≤–µ—Ç—Å–∫", '—Å—Å—Å—Ä', r"19\d\d", '–±—É–¥–∞–ø–µ—à—Ç',
             "–≤–µ–Ω–≥—Ä", "–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω", "—É–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "–∫—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω", "–∫–∏—Ä–≥–∏–∑", "–æ–¥–∫–±", r"–∫—Ä–∞—Å–Ω.{2,5}–∞—Ä–º–∏",
             r'–±–µ—Å—Å–º–µ—Ä—Ç–Ω.{1,5}–ø–æ–ª–∫', '–Ω–µ–º–µ—Ü–∫', "—Ñ–∏–Ω–ª—è–Ω–¥", "–±—É—ç–Ω–æ—Å", "–∞—Ä–≥–µ–Ω—Ç–∏–Ω", r"—Ç—Ä–∞—É—Ä–Ω—ã.{1,5}–º–∏—Ç–∏–Ω–≥",
             '–∏—â–µ–º –ª—é–¥–µ–π', "–∫–æ–Ω—Ü–µ—Ä—Ç", "–∫–æ–ø–µ–Ω–≥–∞–≥–µ–Ω", r"\b–∫—É–±–µ\b", '–±—Ä–∏—Ç–∞–Ω', "–º—É–∂ –ø—Ä–æ—Ç–µ—Å—Ç—É–µ—Ç",
             "–∞–Ω–æ–Ω–∏–º–Ω–æ", "–∫–∞–Ω–∞–¥", "—Ä—É–º—ã–Ω", "–ø–æ–ª—å—à", "–ø–æ–ª—å—Å–∫", "–º–æ–ª–¥–∞–≤", r"\b—Å–∞–Ω–¥—É\b", '–±–æ–ª–≥–∞—Ä',
             "–≥—Ä–µ—Ü–∏", "–≥—Ä–µ—á–µ—Å–∫", "–∞–ª–±–∞–Ω", "–Ω–æ—Ä–≤–µ–≥", "—à–≤–µ—Ü", r"–∫–∏—à–∏–Ω.–≤", r'\b–∫–∏—Ç–∞', '–ø–µ–∫–∏–Ω',
             "—Å–ª–æ–≤–∞–∫", r"\b–ª–∞—Ç–≤", r'\b–ª–∏—Ç–≤', "—ç—Å—Ç–æ–Ω", "—à—Ä–∏-–ª–∞–Ω–∫", "–∞–ª–º–∞-–∞—Ç", "—Ç–±–∏–ª–∏—Å", r"\b–≥—Ä—É–∑–∏",
             '—Ç–∞–π–≤–∞–Ω', "–∞–≤—Å—Ç—Ä–∏", r"\b–≤–µ–Ω—ã\b", "–∫–∏–µ–≤", "–∞–∫—Ç–∞—É", "–Ω–µ—Ç–æ–ª–æ–≥", "–±–µ—Ä–ª–∏–Ω", "–º—é–Ω—Ö–µ–Ω",
             "–ª–∞–Ω—Ç–∏–º–æ—Å", '–≥–∞–≥–∞—É–∑', "–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä", r"–ø–æ—Å–≤—è—â.–Ω–Ω", '–ø—Ä–∞–∑–¥–Ω', r'—à—Ç–∞–±.{0,3}–ø—É—Ç–∏–Ω', r"\b–∏—Ä–∞–Ω",
             r"–∑–∞—â–∏—Ç–Ω–∏–∫.{1,5}–æ—Ç–µ—á–µ—Å—Ç–≤", r'–≤–µ—Ä—Ö–æ–≤–Ω.{1,5}\b—Ä–∞–¥', r"–≤–æ–∑–ª–æ–∂–µ–Ω.{1,5}—Ü–≤–µ—Ç", '–∞–±—Ö–∞–∑',
             r'\b–∞–ª–º–∞—Ç', r"\b–∞—Å—Ç–∞–Ω", r"–≤—ã–±–æ—Ä—ã.{0,3}–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç", "–≤–æ–∑—Ä–∞—Å—Ç –ø—Ä–æ—Ç–µ—Å—Ç"]
stopwords_regex = re.compile(r"(" + "|".join(stopwords) + r")", re.IGNORECASE)

def log(msg: str):
    print(f"[{datetime.now().strftime('%H:%M:%S')}] {msg}")

def FilterVK(input_file: str = "data/posts_vk.jsonl", output_file: str = "data/posts_vk_filtered.csv"):
    data = []
    input_path = Path(input_file)

    if not input_path.exists():
        log(f"‚ö†Ô∏è –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º FilterVK")
        return

    with input_path.open(encoding="utf-8") as file:
        for line in file:
            j_line = json.loads(line)
            post_text = j_line.get("PostText", "").lower()

            if keywords_regex.search(post_text) and not stopwords_regex.search(post_text):
                data.append(j_line)

    if not data:
        log("‚ö†Ô∏è –í VK-–ø–æ—Å—Ç–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
        return

    df = pd.DataFrame(data)
    df.to_csv(output_file, index=False, encoding="utf-8-sig")
    log(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(df)} –ø–æ—Å—Ç–æ–≤ VK ‚Üí {output_file}")

def main():
    log("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤")
    FilterVK()
    log("üèÅ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
